  # CircleCi version
  version: 2.1

  orbs:
    python: circleci/python@2.1.1

  jobs:
    build-and-test:
      executor: python/default
      steps:
        - checkout
        - python/install-packages:
            pip-dependency-file: requirements.txt
            pkg-manager: pip
        - run:
            command: pytest
            name: run pytest
        - run:
            command: flake8
            name: run linting
    build-docker-push:
      docker:
        - image: cimg/python:3.10.5
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Build Docker image
            command: docker build --build-arg SECRET_KEY=$SECRET_KEY -t $DOCKER_USERNAME/$DOCKER_REPO:$CIRCLE_SHA1 .
        - run:
            name: Push Docker Image
            command: |
              echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
              docker tag $DOCKER_USERNAME/$DOCKER_REPO:$CIRCLE_SHA1 $DOCKER_USERNAME/$DOCKER_REPO:latest
              docker push $DOCKER_USERNAME/$DOCKER_REPO:$CIRCLE_SHA1
              docker push $DOCKER_USERNAME/$DOCKER_REPO:latest

    deployment-heroku:
      docker:
        - image: cimg/python:3.10.5
      steps:
        - checkout
        - setup_remote_docker
        - run:
            name: Start container and push to Heroku
            command: |
              curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
              heroku config:set DJANGO_ALLOWED_HOSTS=$HEROKU_APP_NAME.herokuapp.com SECRET_KEY=$SECRET_KEY --app $HEROKU_APP_NAME
              HEROKU_API_KEY=$HEROKU_API_KEY heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
              HEROKU_API_KEY=$HEROKU_API_KEY heroku container:login
              HEROKU_API_KEY=$HEROKU_API_KEY heroku container:push -a $HEROKU_APP_NAME web
              HEROKU_API_KEY=$HEROKU_API_KEY heroku container:release -a $HEROKU_APP_NAME web
  workflows:
    master:
      jobs:
        - build-and-test
        - build-docker-push:
            requires:
              - build-and-test
            filters:
              branches:
                only:
                  - master
        - deployment-heroku:
            requires:
              - build-docker-push
            filters:
              branches:
                only:
                  - master